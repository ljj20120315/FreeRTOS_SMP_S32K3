IPA function summary for Clock_Ip_SetSircStdby.part.0/10 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_SetFircStdby.part.0/9 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_DisableSircStdby/7 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_EnableSircStdby/6 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_SetSircStdby/5 inlinable
  global time:     11.500000
  self size:       10
  global size:     10
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 32] == 0)
  calls:
    Clock_Ip_SetSircStdby.part.0/10 function not considered for inlining
      freq:0.50 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0 predicate: (op0[ref offset: 32] != 0)

IPA function summary for Clock_Ip_DisableFircStdby/4 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_EnableFircStdby/3 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_SetFircStdby/2 inlinable
  global time:     11.500000
  self size:       10
  global size:     10
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 32] == 0)
  calls:
    Clock_Ip_SetFircStdby.part.0/9 function not considered for inlining
      freq:0.50 loop depth: 0 size: 1 time: 10 callee size: 3 stack: 0 predicate: (op0[ref offset: 32] != 0)

IPA function summary for Clock_Ip_InternalOscillatorEmpty_Disable/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_InternalOscillatorEmpty/0 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 57.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Clock_Ip_SetSircStdby.part.0/10.
Enqueueing calls in Clock_Ip_SetFircStdby.part.0/9.
Enqueueing calls in Clock_Ip_DisableSircStdby/7.
Enqueueing calls in Clock_Ip_EnableSircStdby/6.
Enqueueing calls in Clock_Ip_SetSircStdby/5.
Enqueueing calls in Clock_Ip_DisableFircStdby/4.
Enqueueing calls in Clock_Ip_EnableFircStdby/3.
Enqueueing calls in Clock_Ip_SetFircStdby/2.
Enqueueing calls in Clock_Ip_InternalOscillatorEmpty_Disable/1.
Enqueueing calls in Clock_Ip_InternalOscillatorEmpty/0.

Considering Clock_Ip_SetSircStdby.part.0/10 with 6 size
 to be inlined into Clock_Ip_SetSircStdby/5 in unknown:0
 Estimated badness is -1.000000, frequency 0.50.

Considering Clock_Ip_SetFircStdby.part.0/9 with 6 size
 to be inlined into Clock_Ip_SetFircStdby/2 in unknown:0
 Estimated badness is -1.000000, frequency 0.50.
node context cache: 0 hits, 0 misses, 2 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 40.000000 weighted by profile: 0.000000

Why inlining failed?
IPA function summary for Clock_Ip_DisableSircStdby/7 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_EnableSircStdby/6 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_SetSircStdby/5 inlinable
  global time:     8.000000
  self size:       10
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 32] == 0)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 32] != 0)
  calls:
    Clock_Ip_SetSircStdby.part.0/10 inlined
      freq:0.50
      Stack frame offset 0, callee self size 0

IPA function summary for Clock_Ip_DisableFircStdby/4 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_EnableFircStdby/3 inlinable
  global time:     5.000000
  self size:       6
  global size:     6
  min size:       3
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_SetFircStdby/2 inlinable
  global time:     8.000000
  self size:       10
  global size:     12
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 32] == 0)
    size:3.000000, time:1.500000,  executed if:(op0[ref offset: 32] != 0)
  calls:
    Clock_Ip_SetFircStdby.part.0/9 inlined
      freq:0.50
      Stack frame offset 0, callee self size 0

IPA function summary for Clock_Ip_InternalOscillatorEmpty_Disable/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Clock_Ip_InternalOscillatorEmpty/0 inlinable
  global time:     2.000000
  self size:       3
  global size:     3
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Clock_Ip_SetSircStdby.part.0/10 (Clock_Ip_SetSircStdby.part.0) @06f6d380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Clock_Ip_SetSircStdby.part.0/10 is inline copy in Clock_Ip_SetSircStdby/5
  Availability: local
  Function flags: count:536870912 (estimated locally) body local split_part optimize_size
  Called by: Clock_Ip_SetSircStdby/5 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: 
Clock_Ip_SetFircStdby.part.0/9 (Clock_Ip_SetFircStdby.part.0) @06f6d9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Function Clock_Ip_SetFircStdby.part.0/9 is inline copy in Clock_Ip_SetFircStdby/2
  Availability: local
  Function flags: count:536870912 (estimated locally) body local split_part optimize_size
  Called by: Clock_Ip_SetFircStdby/2 (inlined) (536870912 (estimated locally),0.50 per call) 
  Calls: 
Clock_Ip_axIntOscCallbacks/8 (Clock_Ip_axIntOscCallbacks) @06e9a240
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_InternalOscillatorEmpty/0 (addr) Clock_Ip_InternalOscillatorEmpty/0 (addr) Clock_Ip_InternalOscillatorEmpty_Disable/1 (addr) Clock_Ip_SetFircStdby/2 (addr) Clock_Ip_EnableFircStdby/3 (addr) Clock_Ip_DisableFircStdby/4 (addr) Clock_Ip_SetSircStdby/5 (addr) Clock_Ip_EnableSircStdby/6 (addr) Clock_Ip_DisableSircStdby/7 (addr) 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_DisableSircStdby/7 (Clock_Ip_DisableSircStdby) @06e98ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/8 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_EnableSircStdby/6 (Clock_Ip_EnableSircStdby) @06e98c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/8 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_SetSircStdby/5 (Clock_Ip_SetSircStdby) @06e989a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/8 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_SetSircStdby.part.0/10 (inlined) (536870912 (estimated locally),0.50 per call) 
Clock_Ip_DisableFircStdby/4 (Clock_Ip_DisableFircStdby) @06e98700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/8 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_EnableFircStdby/3 (Clock_Ip_EnableFircStdby) @06e98460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/8 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_SetFircStdby/2 (Clock_Ip_SetFircStdby) @06e981c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/8 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_SetFircStdby.part.0/9 (inlined) (536870912 (estimated locally),0.50 per call) 
Clock_Ip_InternalOscillatorEmpty_Disable/1 (Clock_Ip_InternalOscillatorEmpty_Disable) @06e48ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/8 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_InternalOscillatorEmpty/0 (Clock_Ip_InternalOscillatorEmpty) @06e48e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axIntOscCallbacks/8 (addr) Clock_Ip_axIntOscCallbacks/8 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 

;; Function Clock_Ip_InternalOscillatorEmpty (Clock_Ip_InternalOscillatorEmpty, funcdef_no=0, decl_uid=6547, cgraph_uid=1, symbol_order=0)

Clock_Ip_InternalOscillatorEmpty (const struct Clock_Ip_IrcoscConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Clock_Ip_InternalOscillatorEmpty_Disable (Clock_Ip_InternalOscillatorEmpty_Disable, funcdef_no=1, decl_uid=6549, cgraph_uid=2, symbol_order=1)

Clock_Ip_InternalOscillatorEmpty_Disable (Clock_Ip_NameType Name)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Clock_Ip_EnableFircStdby (Clock_Ip_EnableFircStdby, funcdef_no=3, decl_uid=6553, cgraph_uid=4, symbol_order=3)

Clock_Ip_EnableFircStdby (const struct Clock_Ip_IrcoscConfigType * Config)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE;
  _2 = _1 | 1;
  MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE ={v} _2;
  return;

}



;; Function Clock_Ip_DisableFircStdby (Clock_Ip_DisableFircStdby, funcdef_no=4, decl_uid=6555, cgraph_uid=5, symbol_order=4)

Clock_Ip_DisableFircStdby (Clock_Ip_NameType Name)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE;
  _2 = _1 & 4294967294;
  MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE ={v} _2;
  return;

}



;; Function Clock_Ip_EnableSircStdby (Clock_Ip_EnableSircStdby, funcdef_no=6, decl_uid=6559, cgraph_uid=7, symbol_order=6)

Clock_Ip_EnableSircStdby (const struct Clock_Ip_IrcoscConfigType * Config)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN;
  _2 = _1 | 256;
  MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN ={v} _2;
  return;

}



;; Function Clock_Ip_DisableSircStdby (Clock_Ip_DisableSircStdby, funcdef_no=7, decl_uid=6561, cgraph_uid=8, symbol_order=7)

Clock_Ip_DisableSircStdby (Clock_Ip_NameType Name)
{
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN;
  _2 = _1 & 4294967039;
  MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN ={v} _2;
  return;

}



;; Function Clock_Ip_SetFircStdby (Clock_Ip_SetFircStdby, funcdef_no=2, decl_uid=6551, cgraph_uid=3, symbol_order=2)


Symbols to be put in SSA form
{ D.6599 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Clock_Ip_SetFircStdby (const struct Clock_Ip_IrcoscConfigType * Config)
{
  short unsigned int _1;
  long unsigned int _3;
  long unsigned int _5;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = Config_7(D)->Enable;
  if (_1 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG D#1 => Config_7(D)
  # DEBUG INLINE_ENTRY Clock_Ip_SetFircStdby
  # DEBUG D#2 => D#1
  # DEBUG Config => D#2
  # DEBUG BEGIN_STMT
  _9 ={v} MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE;
  _10 = _9 | 1;
  MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE ={v} _10;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE;
  _5 = _3 & 4294967294;
  MEM[(struct FIRC_Type *)1076690944B].STDBY_ENABLE ={v} _5;

  <bb 5> [local count: 1073741824]:
  # DEBUG Config => NULL
  return;

}



;; Function Clock_Ip_SetSircStdby (Clock_Ip_SetSircStdby, funcdef_no=5, decl_uid=6557, cgraph_uid=6, symbol_order=5)


Symbols to be put in SSA form
{ D.6602 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Removing basic block 3
Removing basic block 6
Removing basic block 7
Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Clock_Ip_SetSircStdby (const struct Clock_Ip_IrcoscConfigType * Config)
{
  short unsigned int _1;
  long unsigned int _3;
  long unsigned int _5;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = Config_7(D)->Enable;
  if (_1 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG D#3 => Config_7(D)
  # DEBUG INLINE_ENTRY Clock_Ip_SetSircStdby
  # DEBUG D#4 => D#3
  # DEBUG Config => D#4
  # DEBUG BEGIN_STMT
  _9 ={v} MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN;
  _10 = _9 | 256;
  MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN ={v} _10;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN;
  _5 = _3 & 4294967039;
  MEM[(struct SIRC_Type *)1076658176B].MISCELLANEOUS_IN ={v} _5;

  <bb 5> [local count: 1073741824]:
  # DEBUG Config => NULL
  return;

}


