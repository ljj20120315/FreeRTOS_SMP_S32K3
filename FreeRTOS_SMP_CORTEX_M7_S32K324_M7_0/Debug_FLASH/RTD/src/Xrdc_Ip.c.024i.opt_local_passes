Xrdc_Ip_GetDomainIDErrorStatus (uint32 u32Instance, struct Xrdc_Ip_DomainIDErrStatusType * pXrdcDomainIDErrorStatus)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Xrdc_Ip_GetDomainIDErrorStatus_Privileged (u32Instance_2(D), pXrdcDomainIDErrorStatus_3(D));
  return;

}


Xrdc_Ip_LockProcessID (uint8 u8MasterCore)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Xrdc_Ip_LockProcessID_Privileged (u8MasterCore_2(D));
  return;

}


Xrdc_Ip_SetProcessID (uint8 u8MasterCore, uint8 u8Pid, Xrdc_Ip_SecureAttributeType eSecureAttr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Xrdc_Ip_SetProcessID_Privileged (u8MasterCore_2(D), u8Pid_3(D), eSecureAttr_4(D));
  return;

}


Xrdc_Ip_GetDomainID (uint32 u32Instance)
{
  uint32 _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _4 = Xrdc_Ip_GetDomainID_Privileged (u32Instance_2(D));
  return _4;

}


Xrdc_Ip_Init (const struct Xrdc_Ip_ConfigType * pXrdcConfig)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Xrdc_Ip_Init_Privileged (pXrdcConfig_2(D));
  return;

}


Xrdc_Ip_GetDomainIDErrorStatus_Privileged (uint32 u32Instance, struct Xrdc_Ip_DomainIDErrStatusType * pXrdcDomainIDErrorStatus)
{
  uint8 u8MCRInstanceNumber;
  uint8 u8PACInstanceNumber;
  uint8 u8counter;
  _Bool _1;
  _Bool _2;
  long unsigned int _3;
  long unsigned int _4;
  volatile uint32 * _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  volatile uint32 * _14;
  unsigned char u8counter.1_15;
  long unsigned int _16;
  long unsigned int _17;
  volatile uint32 * _18;
  long unsigned int _19;
  long unsigned int _20;
  unsigned char _21;
  unsigned char _22;
  unsigned char _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  volatile uint32 * _29;
  unsigned char u8counter.2_30;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = u32Instance_35(D) == 0;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = pXrdcDomainIDErrorStatus_38(D) != 0B;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = 1076330496;
  _4 = _3 + 240;
  _5 = (volatile uint32 *) _4;
  _6 ={v} *_5;
  _7 = _6 >> 16;
  _8 = (unsigned char) _7;
  u8MCRInstanceNumber_40 = _8 + 1;
  # DEBUG u8MCRInstanceNumber => u8MCRInstanceNumber_40
  # DEBUG BEGIN_STMT
  u8counter_41 = 0;
  # DEBUG u8counter => u8counter_41
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Xrdc_Ip_GetDetailError (u32Instance_35(D), u8counter_31, pXrdcDomainIDErrorStatus_38(D));
  # DEBUG BEGIN_STMT
  _9 = 1076330496;
  _10 = (long unsigned int) u8counter_31;
  _11 = _10 << 4;
  _12 = _9 + _11;
  _13 = _12 + 1036;
  _14 = (volatile uint32 *) _13;
  *_14 ={v} 1073741824;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  u8counter.1_15 = u8counter_31;
  u8counter_53 = u8counter.1_15 + 1;
  # DEBUG u8counter => u8counter_53

  <bb 4> :
  # u8counter_31 = PHI <u8counter_41(2), u8counter_53(3)>
  # DEBUG u8counter => u8counter_31
  # DEBUG BEGIN_STMT
  if (u8counter_31 < u8MCRInstanceNumber_40)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _16 = 1076330496;
  _17 = _16 + 240;
  _18 = (volatile uint32 *) _17;
  _19 ={v} *_18;
  _20 = _19 >> 24;
  _21 = (unsigned char) _20;
  _22 = _21 & 15;
  u8PACInstanceNumber_42 = _22 + 1;
  # DEBUG u8PACInstanceNumber => u8PACInstanceNumber_42
  # DEBUG BEGIN_STMT
  u8counter_43 = 0;
  # DEBUG u8counter => u8counter_43
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _23 = u8counter_32 + 16;
  Xrdc_Ip_GetDetailError (u32Instance_35(D), _23, pXrdcDomainIDErrorStatus_38(D));
  # DEBUG BEGIN_STMT
  _24 = 1076330496;
  _25 = (long unsigned int) u8counter_32;
  _26 = _25 << 4;
  _27 = _24 + _26;
  _28 = _27 + 1036;
  _29 = (volatile uint32 *) _28;
  *_29 ={v} 1073741824;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  u8counter.2_30 = u8counter_32;
  u8counter_48 = u8counter.2_30 + 1;
  # DEBUG u8counter => u8counter_48

  <bb 7> :
  # u8counter_32 = PHI <u8counter_43(5), u8counter_48(6)>
  # DEBUG u8counter => u8counter_32
  # DEBUG BEGIN_STMT
  if (u8counter_32 < u8PACInstanceNumber_42)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}


Xrdc_Ip_GetDetailError (uint32 u32Instance, uint8 u8SubInstance, struct Xrdc_Ip_DomainIDErrStatusType * pXrdcDomainIDErrorStatus)
{
  volatile uint32 u32DomainIDAccess;
  uint32 u32ErrorStatus;
  uint32 u32ErrorState;
  uint32 u32ErrorAcces;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  volatile uint32 * _6;
  int _7;
  int _8;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  volatile uint32 * _12;
  long unsigned int _13;
  long unsigned int u32DomainIDAccess.3_14;
  long unsigned int u32DomainIDAccess.4_15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  volatile uint32 * _21;
  int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  volatile uint32 * _29;
  int _30;
  long unsigned int _31;
  long unsigned int _32;
  int _33;
  long unsigned int _34;
  long unsigned int _35;
  int _36;
  int _37;
  int _38;
  long unsigned int _39;
  long unsigned int _40;
  int _41;
  <unnamed type> _42;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = 1076330496;
  _2 = (long unsigned int) u8SubInstance_47(D);
  _3 = _2 << 4;
  _4 = _1 + _3;
  _5 = _4 + 1028;
  _6 = (volatile uint32 *) _5;
  u32ErrorStatus_49 ={v} *_6;
  # DEBUG u32ErrorStatus => u32ErrorStatus_49
  # DEBUG BEGIN_STMT
  u32ErrorState_50 = u32ErrorStatus_49 >> 30;
  # DEBUG u32ErrorState => u32ErrorState_50
  # DEBUG BEGIN_STMT
  if (u32ErrorState_50 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _7 = (int) u8SubInstance_47(D);
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_7].ErrState = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (u32ErrorState_50 == 2)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _8 = (int) u8SubInstance_47(D);
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_8].ErrState = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _9 = (int) u8SubInstance_47(D);
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_9].ErrState = 2;

  <bb 7> :
  # DEBUG BEGIN_STMT
  if (u32ErrorState_50 > 1)
    goto <bb 8>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _10 = 1076330496;
  _11 = _10 + 244;
  _12 = (volatile uint32 *) _11;
  _13 ={v} *_12;
  u32DomainIDAccess ={v} _13;
  # DEBUG BEGIN_STMT
  u32DomainIDAccess.3_14 ={v} u32DomainIDAccess;
  if (u32DomainIDAccess.3_14 <= 2)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  u32DomainIDAccess.4_15 ={v} u32DomainIDAccess;
  pXrdcDomainIDErrorStatus_51(D)->DomainIDAccessError = u32DomainIDAccess.4_15;
  goto <bb 11>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  pXrdcDomainIDErrorStatus_51(D)->DomainIDAccessError = 255;

  <bb 11> :
  # DEBUG BEGIN_STMT
  _16 = 1076330496;
  _17 = (long unsigned int) u8SubInstance_47(D);
  _18 = _17 << 4;
  _19 = _16 + _18;
  _20 = _19 + 1024;
  _21 = (volatile uint32 *) _20;
  _22 = (int) u8SubInstance_47(D);
  _23 ={v} *_21;
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_22].u32AddError = _23;
  # DEBUG BEGIN_STMT
  _24 = 1076330496;
  _25 = (long unsigned int) u8SubInstance_47(D);
  _26 = _25 << 4;
  _27 = _24 + _26;
  _28 = _27 + 1032;
  _29 = (volatile uint32 *) _28;
  _30 = (int) u8SubInstance_47(D);
  _31 ={v} *_29;
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_30].u32AddErrorRemain = _31;
  # DEBUG BEGIN_STMT
  _32 = u32ErrorStatus_49 >> 24;
  _33 = (int) u8SubInstance_47(D);
  _34 = _32 & 7;
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_33].u32ErrPort = _34;
  # DEBUG BEGIN_STMT
  _35 = u32ErrorStatus_49 >> 11;
  u32ErrorAcces_61 = _35 & 1;
  # DEBUG u32ErrorAcces => u32ErrorAcces_61
  # DEBUG BEGIN_STMT
  if (u32ErrorAcces_61 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _36 = (int) u8SubInstance_47(D);
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_36].ErrAccess = 1;
  goto <bb 16>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  if (u32ErrorAcces_61 == 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _37 = (int) u8SubInstance_47(D);
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_37].ErrAccess = 2;
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _38 = (int) u8SubInstance_47(D);
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_38].ErrAccess = 0;

  <bb 16> :
  # DEBUG BEGIN_STMT
  _39 = u32ErrorStatus_49 >> 8;
  _40 = _39 & 7;
  _41 = (int) u8SubInstance_47(D);
  _42 = Xrdc_Ip_GetErrAttribute (_40);
  pXrdcDomainIDErrorStatus_51(D)->ErrorStatus[_41].ErrAttribute = _42;

  <bb 17> :
  return;

}


Xrdc_Ip_LockProcessID_Privileged (uint8 u8MasterCore)
{
  _Bool _1;
  int _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  volatile uint32 * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  volatile uint32 * _17;
  long unsigned int _18;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = u8MasterCore_19(D) <= 4;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = (int) u8MasterCore_19(D);
  _3 = g_bAvailablePidRegisters[_2];
  _4 = _3;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _5 = 1076330496;
  _6 = (long unsigned int) u8MasterCore_19(D);
  _7 = _6 << 2;
  _8 = _5 + _7;
  _9 = _8 + 1792;
  _10 = (volatile uint32 *) _9;
  _11 ={v} *_10;
  _12 = 1076330496;
  _13 = (long unsigned int) u8MasterCore_19(D);
  _14 = _13 << 2;
  _15 = _12 + _14;
  _16 = _15 + 1792;
  _17 = (volatile uint32 *) _16;
  _18 = _11 | 1610612736;
  *_17 ={v} _18;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  return;

}


Xrdc_Ip_SetProcessID_Privileged (uint8 u8MasterCore, uint8 u8Pid, Xrdc_Ip_SecureAttributeType eSecureAttr)
{
  _Bool _1;
  _Bool _2;
  int _3;
  _Bool _4;
  _Bool _5;
  long unsigned int _6;
  long unsigned int _7;
  volatile uint32 * _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  volatile uint32 * _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  volatile uint32 * _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  volatile uint32 * _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  volatile uint32 * _46;
  long unsigned int _47;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = u8MasterCore_49(D) <= 4;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = u8Pid_52(D) <= 30;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = (int) u8MasterCore_49(D);
  _4 = g_bAvailablePidRegisters[_3];
  _5 = _4;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  _6 = 1076330496;
  _7 = _6 + 248;
  _8 = (volatile uint32 *) _7;
  _9 ={v} *_8;
  _10 = (long unsigned int) u8MasterCore_49(D);
  _11 = _9 >> _10;
  _12 = _11 & 1;
  if (_12 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  if (eSecureAttr_55(D) == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  SchM_Enter_Rm_RM_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  _13 = 1076330496;
  _14 = (long unsigned int) u8MasterCore_49(D);
  _15 = _14 << 2;
  _16 = _13 + _15;
  _17 = _16 + 1792;
  _18 = (volatile uint32 *) _17;
  _19 ={v} *_18;
  _20 = _19 & 4294967232;
  _21 = (long unsigned int) u8Pid_52(D);
  _22 = _21 & 31;
  _23 = _20 | _22;
  _24 = 1076330496;
  _25 = (long unsigned int) u8MasterCore_49(D);
  _26 = _25 << 2;
  _27 = _24 + _26;
  _28 = _27 + 1792;
  _29 = (volatile uint32 *) _28;
  _30 = _23 | 32;
  *_29 ={v} _30;
  # DEBUG BEGIN_STMT
  SchM_Exit_Rm_RM_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  SchM_Enter_Rm_RM_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  _31 = 1076330496;
  _32 = (long unsigned int) u8MasterCore_49(D);
  _33 = _32 << 2;
  _34 = _31 + _33;
  _35 = _34 + 1792;
  _36 = (volatile uint32 *) _35;
  _37 ={v} *_36;
  _38 = _37 & 4294967232;
  _39 = (long unsigned int) u8Pid_52(D);
  _40 = _39 & 31;
  _41 = 1076330496;
  _42 = (long unsigned int) u8MasterCore_49(D);
  _43 = _42 << 2;
  _44 = _41 + _43;
  _45 = _44 + 1792;
  _46 = (volatile uint32 *) _45;
  _47 = _38 | _40;
  *_46 ={v} _47;
  # DEBUG BEGIN_STMT
  SchM_Exit_Rm_RM_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");

  <bb 6> :
  return;

}


Xrdc_Ip_Init_Privileged (const struct Xrdc_Ip_ConfigType * pXrdcConfig)
{
  uint32 u32counter;
  _Bool _1;
  long unsigned int _2;
  _Bool _3;
  const struct Xrdc_Ip_MemConfigType * _4;
  _Bool _5;
  const struct Xrdc_Ip_PeripheralConfigType * _6;
  _Bool _7;
  const struct Xrdc_Ip_DomainConfigType * _8;
  _Bool _9;
  const uint32 * _10;
  long unsigned int _11;
  const uint32 * _12;
  long unsigned int _13;
  long unsigned int _14;
  volatile uint32 * _15;
  long unsigned int _16;
  const uint32 * _17;
  long unsigned int _18;
  const uint32 * _19;
  long unsigned int _20;
  long unsigned int _21;
  volatile uint32 * _22;
  long unsigned int _23;
  long unsigned int _24;
  const struct Xrdc_Ip_MemConfigType * _25;
  long unsigned int _26;
  const struct Xrdc_Ip_MemConfigType * _27;
  long unsigned int _28;
  const struct Xrdc_Ip_PeripheralConfigType * _29;
  long unsigned int _30;
  const struct Xrdc_Ip_PeripheralConfigType * _31;
  long unsigned int _32;
  const struct Xrdc_Ip_DomainConfigType * _33;
  long unsigned int _34;
  const struct Xrdc_Ip_DomainConfigType * _35;
  long unsigned int _36;
  const uint32 * _37;
  long unsigned int _38;
  const uint32 * _39;
  long unsigned int _40;
  long unsigned int _41;
  volatile uint32 * _42;
  long unsigned int _43;
  const uint32 * _44;
  long unsigned int _45;
  const uint32 * _46;
  long unsigned int _47;
  long unsigned int _48;
  volatile uint32 * _49;
  long unsigned int _50;
  long unsigned int _51;

  <bb 2> :
  # DEBUG BEGIN_STMT
  u32counter_62 = 0;
  # DEBUG u32counter => u32counter_62
  # DEBUG BEGIN_STMT
  _1 = pXrdcConfig_63(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = pXrdcConfig_63(D)->u32DomainConfigCnt;
  _3 = _2 != 0;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = pXrdcConfig_63(D)->pMemoryDesConfig;
  _5 = _4 != 0B;
  DevAssert (_5);
  # DEBUG BEGIN_STMT
  _6 = pXrdcConfig_63(D)->pPeripheralDescriptorConfig;
  _7 = _6 != 0B;
  DevAssert (_7);
  # DEBUG BEGIN_STMT
  _8 = pXrdcConfig_63(D)->pDomainConfig;
  _9 = _8 != 0B;
  DevAssert (_9);
  # DEBUG BEGIN_STMT
  u32counter_70 = 0;
  # DEBUG u32counter => u32counter_70
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _10 = pXrdcConfig_63(D)->pInstanceInUsed;
  _11 = u32counter_52 * 4;
  _12 = _10 + _11;
  _13 = *_12;
  _14 = 1076330496;
  _15 = (volatile uint32 *) _14;
  _16 ={v} *_15;
  _17 = pXrdcConfig_63(D)->pInstanceInUsed;
  _18 = u32counter_52 * 4;
  _19 = _17 + _18;
  _20 = *_19;
  _21 = 1076330496;
  _22 = (volatile uint32 *) _21;
  _23 = _16 & 4294967294;
  *_22 ={v} _23;
  # DEBUG BEGIN_STMT
  u32counter_88 = u32counter_52 + 1;
  # DEBUG u32counter => u32counter_88

  <bb 4> :
  # u32counter_52 = PHI <u32counter_70(2), u32counter_88(3)>
  # DEBUG u32counter => u32counter_52
  # DEBUG BEGIN_STMT
  _24 = pXrdcConfig_63(D)->u32InstanceInUsedCnt;
  if (u32counter_52 < _24)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  u32counter_71 = 0;
  # DEBUG u32counter => u32counter_71
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _25 = pXrdcConfig_63(D)->pMemoryDesConfig;
  _26 = u32counter_53 * 40;
  _27 = _25 + _26;
  Xrdc_Memory_Config_Descriptor (_27);
  # DEBUG BEGIN_STMT
  u32counter_86 = u32counter_53 + 1;
  # DEBUG u32counter => u32counter_86

  <bb 7> :
  # u32counter_53 = PHI <u32counter_71(5), u32counter_86(6)>
  # DEBUG u32counter => u32counter_53
  # DEBUG BEGIN_STMT
  _28 = pXrdcConfig_63(D)->u32MemoryConfigCnt;
  if (u32counter_53 < _28)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  u32counter_72 = 0;
  # DEBUG u32counter => u32counter_72
  goto <bb 10>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  _29 = pXrdcConfig_63(D)->pPeripheralDescriptorConfig;
  _30 = u32counter_54 * 24;
  _31 = _29 + _30;
  Xrdc_Peripheral_Access_Config (_31);
  # DEBUG BEGIN_STMT
  u32counter_84 = u32counter_54 + 1;
  # DEBUG u32counter => u32counter_84

  <bb 10> :
  # u32counter_54 = PHI <u32counter_72(8), u32counter_84(9)>
  # DEBUG u32counter => u32counter_54
  # DEBUG BEGIN_STMT
  _32 = pXrdcConfig_63(D)->u32PeripheralConfigCnt;
  if (u32counter_54 < _32)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  u32counter_73 = 0;
  # DEBUG u32counter => u32counter_73
  goto <bb 13>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _33 = pXrdcConfig_63(D)->pDomainConfig;
  _34 = u32counter_55 * 44;
  _35 = _33 + _34;
  Xrdc_Domain_Init (_35);
  # DEBUG BEGIN_STMT
  u32counter_82 = u32counter_55 + 1;
  # DEBUG u32counter => u32counter_82

  <bb 13> :
  # u32counter_55 = PHI <u32counter_73(11), u32counter_82(12)>
  # DEBUG u32counter => u32counter_55
  # DEBUG BEGIN_STMT
  _36 = pXrdcConfig_63(D)->u32DomainConfigCnt;
  if (u32counter_55 < _36)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  u32counter_74 = 0;
  # DEBUG u32counter => u32counter_74
  goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _37 = pXrdcConfig_63(D)->pInstanceInUsed;
  _38 = u32counter_56 * 4;
  _39 = _37 + _38;
  _40 = *_39;
  _41 = 1076330496;
  _42 = (volatile uint32 *) _41;
  _43 ={v} *_42;
  _44 = pXrdcConfig_63(D)->pInstanceInUsed;
  _45 = u32counter_56 * 4;
  _46 = _44 + _45;
  _47 = *_46;
  _48 = 1076330496;
  _49 = (volatile uint32 *) _48;
  _50 = _43 | 1;
  *_49 ={v} _50;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  u32counter_80 = u32counter_56 + 1;
  # DEBUG u32counter => u32counter_80

  <bb 16> :
  # u32counter_56 = PHI <u32counter_74(14), u32counter_80(15)>
  # DEBUG u32counter => u32counter_56
  # DEBUG BEGIN_STMT
  _51 = pXrdcConfig_63(D)->u32InstanceInUsedCnt;
  if (u32counter_56 < _51)
    goto <bb 15>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 17> :
  return;

}


Xrdc_Ip_GetDomainID_Privileged (uint32 u32Instance)
{
  uint32 u32Value;
  long unsigned int _1;
  long unsigned int _2;
  volatile uint32 * _3;
  uint32 _10;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _1 = 1076330496;
  _2 = _1 + 244;
  _3 = (volatile uint32 *) _2;
  u32Value_7 ={v} *_3;
  # DEBUG u32Value => u32Value_7
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _10 = u32Value_7;
  return _10;

}


Xrdc_Get_Secure_Attribute (Xrdc_Ip_SecureAttributeType eXrdcSecure)
{
  uint32 Ret;
  uint32 _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (eXrdcSecure_2(D) == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Ret_5 = 64;
  # DEBUG Ret => Ret_5
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (eXrdcSecure_2(D) == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Ret_4 = 0;
  # DEBUG Ret => Ret_4
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Ret_3 = 192;
  # DEBUG Ret => Ret_3

  <bb 7> :
  # Ret_1 = PHI <Ret_5(3), Ret_4(5), Ret_3(6)>
  # DEBUG Ret => Ret_1
  # DEBUG BEGIN_STMT
  _6 = Ret_1;
  return _6;

}


Xrdc_Get_Priviledge_Attribute (Xrdc_Ip_PriviledgedAttributeType eXrdcPriviledge)
{
  uint32 Ret;
  uint32 _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (eXrdcPriviledge_2(D) == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Ret_5 = 0;
  # DEBUG Ret => Ret_5
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (eXrdcPriviledge_2(D) == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  Ret_4 = 16;
  # DEBUG Ret => Ret_4
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  Ret_3 = 48;
  # DEBUG Ret => Ret_3

  <bb 7> :
  # Ret_1 = PHI <Ret_5(3), Ret_4(5), Ret_3(6)>
  # DEBUG Ret => Ret_1
  # DEBUG BEGIN_STMT
  _6 = Ret_1;
  return _6;

}


Xrdc_Ip_GetErrAttribute (uint32 u32ErrorAttribute)
{
  Xrdc_Ip_ErrorAttributeType errorStatus;
  Xrdc_Ip_ErrorAttributeType _12;

  <bb 2> :
  # DEBUG BEGIN_STMT
  errorStatus_2 = 0;
  # DEBUG errorStatus => errorStatus_2
  # DEBUG BEGIN_STMT
  switch (u32ErrorAttribute_3(D)) <default: <L11> [INV], case 0: <L0> [INV], case 1: <L1> [INV], case 2: <L2> [INV], case 3: <L3> [INV], case 4: <L4> [INV], case 5: <L5> [INV], case 6: <L6> [INV], case 7: <L7> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  errorStatus_11 = 1;
  # DEBUG errorStatus => errorStatus_11
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  errorStatus_10 = 2;
  # DEBUG errorStatus => errorStatus_10
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  errorStatus_9 = 3;
  # DEBUG errorStatus => errorStatus_9
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  errorStatus_8 = 4;
  # DEBUG errorStatus => errorStatus_8
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  errorStatus_7 = 5;
  # DEBUG errorStatus => errorStatus_7
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  errorStatus_6 = 6;
  # DEBUG errorStatus => errorStatus_6
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  errorStatus_5 = 7;
  # DEBUG errorStatus => errorStatus_5
  # DEBUG BEGIN_STMT
  goto <bb 11>; [INV]

  <bb 10> :
<L7>:
  # DEBUG BEGIN_STMT
  errorStatus_4 = 8;
  # DEBUG errorStatus => errorStatus_4
  # DEBUG BEGIN_STMT

  <bb 11> :
  # errorStatus_1 = PHI <errorStatus_11(3), errorStatus_10(4), errorStatus_9(5), errorStatus_8(6), errorStatus_7(7), errorStatus_6(8), errorStatus_5(9), errorStatus_4(10), errorStatus_2(2)>
<L11>:
  # DEBUG errorStatus => errorStatus_1
  # DEBUG BEGIN_STMT
  _12 = errorStatus_1;
  return _12;

}


Xrdc_Domain_Init (const struct Xrdc_Ip_DomainConfigType * pDomainConfig)
{
  uint32 u32UserAtt;
  uint32 u32SecureAtt;
  _Bool _1;
  long unsigned int _2;
  _Bool _3;
  <unnamed type> _4;
  <unnamed type> _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  <unnamed type> _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  volatile uint32 * _24;
  long unsigned int _25;
  <unnamed type> _26;
  <unnamed type> _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  <unnamed type> _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  volatile uint32 * _35;
  long unsigned int _36;
  <unnamed type> _37;
  <unnamed type> _38;
  long unsigned int _39;
  long unsigned int _40;
  <unnamed type> _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  volatile uint32 * _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  <unnamed type> _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  volatile uint32 * _55;
  long unsigned int _56;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = pDomainConfig_58(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = pDomainConfig_58(D)->u32XrdcInstance;
  _3 = _2 == 0;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = pDomainConfig_58(D)->XrdcCoreMdacInstance;
  if (_4 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _5 = pDomainConfig_58(D)->u32XrdcDomainID;
  _6 = _5 & 7;
  _7 = pDomainConfig_58(D)->u32XrdcProcessIDEnable;
  _8 = _6 | _7;
  _9 = pDomainConfig_58(D)->u32XrdcProcessID;
  _10 = _9 << 16;
  _11 = _8 | _10;
  _12 = pDomainConfig_58(D)->u32XrdcProcessIDMask;
  _13 = _12 << 8;
  _14 = _11 | _13;
  _15 = pDomainConfig_58(D)->u32XrdcInstance;
  _16 = 1076330496;
  _17 = pDomainConfig_58(D)->XrdcMdacInstance;
  _18 = _17 << 5;
  _19 = _16 + _18;
  _20 = pDomainConfig_58(D)->u32XrdcWordDescriptor;
  _21 = _20 << 2;
  _22 = _19 + _21;
  _23 = _22 + 2048;
  _24 = (volatile uint32 *) _23;
  _25 = _14 | 2147483648;
  *_24 ={v} _25;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _26 = pDomainConfig_58(D)->XrdcCoreMdacInstance;
  if (_26 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  _27 = pDomainConfig_58(D)->u32XrdcDomainID;
  _28 = _27 & 7;
  _29 = pDomainConfig_58(D)->u32XrdcInstance;
  _30 = 1076330496;
  _31 = pDomainConfig_58(D)->XrdcMdacInstance;
  _32 = _31 << 5;
  _33 = _30 + _32;
  _34 = _33 + 2048;
  _35 = (volatile uint32 *) _34;
  _36 = _28 | 2684354560;
  *_35 ={v} _36;
  # DEBUG BEGIN_STMT
  _37 = pDomainConfig_58(D)->eXrdcSecureOutput;
  u32SecureAtt_64 = Xrdc_Get_Secure_Attribute (_37);
  # DEBUG u32SecureAtt => u32SecureAtt_64
  # DEBUG BEGIN_STMT
  _38 = pDomainConfig_58(D)->eXrdcPriviledgeOutput;
  u32UserAtt_66 = Xrdc_Get_Priviledge_Attribute (_38);
  # DEBUG u32UserAtt => u32UserAtt_66
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _39 = pDomainConfig_58(D)->u32XrdcInstance;
  _40 = 1076330496;
  _41 = pDomainConfig_58(D)->XrdcMdacInstance;
  _42 = _41 << 5;
  _43 = _40 + _42;
  _44 = _43 + 2048;
  _45 = (volatile uint32 *) _44;
  _46 ={v} *_45;
  _47 = _46 & 4294967055;
  _48 = u32UserAtt_66 | u32SecureAtt_64;
  _49 = pDomainConfig_58(D)->u32XrdcInstance;
  _50 = 1076330496;
  _51 = pDomainConfig_58(D)->XrdcMdacInstance;
  _52 = _51 << 5;
  _53 = _50 + _52;
  _54 = _53 + 2048;
  _55 = (volatile uint32 *) _54;
  _56 = _47 | _48;
  *_55 ={v} _56;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");

  <bb 6> :
  # DEBUG BEGIN_STMT
  return;

}


Xrdc_Peripheral_Access_Config (const struct Xrdc_Ip_PeripheralConfigType * pXrdcPerDescriptor)
{
  _Bool _1;
  long unsigned int _2;
  _Bool _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  volatile uint32 * _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  volatile uint32 * _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  volatile uint32 * _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  volatile uint32 * _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  volatile uint32 * _76;
  long unsigned int _77;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pXrdcPerDescriptor_78(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = pXrdcPerDescriptor_78(D)->u32XrdcInstance;
  _3 = _2 == 0;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _4 = pXrdcPerDescriptor_78(D)->u32XrdcInstance;
  _5 = 1076330496;
  _6 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _7 = _6 >> 7;
  _8 = _7 * 1024;
  _9 = _5 + _8;
  _10 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _11 = _10 << 3;
  _12 = _11 & 1016;
  _13 = _9 + _12;
  _14 = _13 + 4100;
  _15 = (volatile uint32 *) _14;
  _16 ={v} *_15;
  _17 = pXrdcPerDescriptor_78(D)->u32XrdcInstance;
  _18 = 1076330496;
  _19 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _20 = _19 >> 7;
  _21 = _20 * 1024;
  _22 = _18 + _21;
  _23 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _24 = _23 << 3;
  _25 = _24 & 1016;
  _26 = _22 + _25;
  _27 = _26 + 4100;
  _28 = (volatile uint32 *) _27;
  _29 = _16 & 2147483647;
  *_28 ={v} _29;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _30 = pXrdcPerDescriptor_78(D)->u32XrdcSema4Enable;
  _31 = pXrdcPerDescriptor_78(D)->u32XrdcSema4Number;
  _32 = _31 << 24;
  _33 = _32 & 251658240;
  _34 = _30 | _33;
  _35 = pXrdcPerDescriptor_78(D)->u32XrdcPerPolicy;
  _36 = pXrdcPerDescriptor_78(D)->u32XrdcInstance;
  _37 = 1076330496;
  _38 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _39 = _38 >> 7;
  _40 = _39 * 1024;
  _41 = _37 + _40;
  _42 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _43 = _42 << 3;
  _44 = _43 & 1016;
  _45 = _41 + _44;
  _46 = _45 + 4096;
  _47 = (volatile uint32 *) _46;
  _48 = _34 | _35;
  *_47 ={v} _48;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _49 = pXrdcPerDescriptor_78(D)->u32XrdcInstance;
  _50 = 1076330496;
  _51 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _52 = _51 >> 7;
  _53 = _52 * 1024;
  _54 = _50 + _53;
  _55 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _56 = _55 << 3;
  _57 = _56 & 1016;
  _58 = _54 + _57;
  _59 = _58 + 4100;
  _60 = (volatile uint32 *) _59;
  _61 ={v} *_60;
  _62 = _61 & 2130706432;
  _63 = pXrdcPerDescriptor_78(D)->u32XrdcPerPolicy1;
  _64 = _62 | _63;
  _65 = pXrdcPerDescriptor_78(D)->u32XrdcInstance;
  _66 = 1076330496;
  _67 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _68 = _67 >> 7;
  _69 = _68 * 1024;
  _70 = _66 + _69;
  _71 = pXrdcPerDescriptor_78(D)->u32XrdcPdacInstance;
  _72 = _71 << 3;
  _73 = _72 & 1016;
  _74 = _70 + _73;
  _75 = _74 + 4100;
  _76 = (volatile uint32 *) _75;
  _77 = _64 | 2147483648;
  *_76 ={v} _77;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  return;

}


Xrdc_Memory_Config_Descriptor (const struct Xrdc_Ip_MemConfigType * pXrdcMemDescriptor)
{
  _Bool _1;
  long unsigned int _2;
  _Bool _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  volatile uint32 * _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  volatile uint32 * _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  volatile uint32 * _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  volatile uint32 * _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  volatile uint32 * _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  volatile uint32 * _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _81;
  long unsigned int _82;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _89;
  volatile uint32 * _90;
  long unsigned int _91;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pXrdcMemDescriptor_92(D) != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = pXrdcMemDescriptor_92(D)->u32XrdcInstance;
  _3 = _2 == 0;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _4 = pXrdcMemDescriptor_92(D)->u32XrdcInstance;
  _5 = 1076330496;
  _6 = pXrdcMemDescriptor_92(D)->u32XrdcMrcInstance;
  _7 = _6 << 4;
  _8 = pXrdcMemDescriptor_92(D)->u32XrdcMrcRegionDescriptor;
  _9 = _7 + _8;
  _10 = _9 * 32;
  _11 = _5 + _10;
  _12 = _11 + 8204;
  _13 = (volatile uint32 *) _12;
  _14 ={v} *_13;
  _15 = pXrdcMemDescriptor_92(D)->u32XrdcInstance;
  _16 = 1076330496;
  _17 = pXrdcMemDescriptor_92(D)->u32XrdcMrcInstance;
  _18 = _17 << 4;
  _19 = pXrdcMemDescriptor_92(D)->u32XrdcMrcRegionDescriptor;
  _20 = _18 + _19;
  _21 = _20 * 32;
  _22 = _16 + _21;
  _23 = _22 + 8204;
  _24 = (volatile uint32 *) _23;
  _25 = _14 & 2147483647;
  *_24 ={v} _25;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _26 = pXrdcMemDescriptor_92(D)->u32XrdcStartAddress;
  _27 = pXrdcMemDescriptor_92(D)->u32XrdcInstance;
  _28 = 1076330496;
  _29 = pXrdcMemDescriptor_92(D)->u32XrdcMrcInstance;
  _30 = _29 << 4;
  _31 = pXrdcMemDescriptor_92(D)->u32XrdcMrcRegionDescriptor;
  _32 = _30 + _31;
  _33 = _32 * 32;
  _34 = _28 + _33;
  _35 = _34 + 8192;
  _36 = (volatile uint32 *) _35;
  _37 = _26 | 1;
  *_36 ={v} _37;
  # DEBUG BEGIN_STMT
  _38 = pXrdcMemDescriptor_92(D)->u32XrdcEndAddress;
  _39 = pXrdcMemDescriptor_92(D)->u32XrdcInstance;
  _40 = 1076330496;
  _41 = pXrdcMemDescriptor_92(D)->u32XrdcMrcInstance;
  _42 = _41 << 4;
  _43 = pXrdcMemDescriptor_92(D)->u32XrdcMrcRegionDescriptor;
  _44 = _42 + _43;
  _45 = _44 * 32;
  _46 = _40 + _45;
  _47 = _46 + 8196;
  _48 = (volatile uint32 *) _47;
  _49 = _38 | 1;
  *_48 ={v} _49;
  # DEBUG BEGIN_STMT
  _50 = pXrdcMemDescriptor_92(D)->u32XrdcSema4Enable;
  _51 = pXrdcMemDescriptor_92(D)->u32XrdcSema4Number;
  _52 = _51 << 24;
  _53 = _52 & 251658240;
  _54 = _50 | _53;
  _55 = pXrdcMemDescriptor_92(D)->u32XrdcMemPolicy;
  _56 = pXrdcMemDescriptor_92(D)->u32XrdcInstance;
  _57 = 1076330496;
  _58 = pXrdcMemDescriptor_92(D)->u32XrdcMrcInstance;
  _59 = _58 << 4;
  _60 = pXrdcMemDescriptor_92(D)->u32XrdcMrcRegionDescriptor;
  _61 = _59 + _60;
  _62 = _61 * 32;
  _63 = _57 + _62;
  _64 = _63 + 8200;
  _65 = (volatile uint32 *) _64;
  _66 = _54 | _55;
  *_65 ={v} _66;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  # DEBUG BEGIN_STMT
  _67 = pXrdcMemDescriptor_92(D)->u32XrdcInstance;
  _68 = 1076330496;
  _69 = pXrdcMemDescriptor_92(D)->u32XrdcMrcInstance;
  _70 = _69 << 4;
  _71 = pXrdcMemDescriptor_92(D)->u32XrdcMrcRegionDescriptor;
  _72 = _70 + _71;
  _73 = _72 * 32;
  _74 = _68 + _73;
  _75 = _74 + 8204;
  _76 = (volatile uint32 *) _75;
  _77 ={v} *_76;
  _78 = _77 & 2130706432;
  _79 = pXrdcMemDescriptor_92(D)->u32XrdcMemPolicy1;
  _80 = _78 | _79;
  _81 = pXrdcMemDescriptor_92(D)->u32XrdcInstance;
  _82 = 1076330496;
  _83 = pXrdcMemDescriptor_92(D)->u32XrdcMrcInstance;
  _84 = _83 << 4;
  _85 = pXrdcMemDescriptor_92(D)->u32XrdcMrcRegionDescriptor;
  _86 = _84 + _85;
  _87 = _86 * 32;
  _88 = _82 + _87;
  _89 = _88 + 8204;
  _90 = (volatile uint32 *) _89;
  _91 = _80 | 2147483648;
  *_90 ={v} _91;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" DSB");
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" ISB");
  return;

}


DevAssert (volatile boolean x)
{
  _Bool x.0_1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  x.0_1 ={v} x;
  if (x.0_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 3>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


