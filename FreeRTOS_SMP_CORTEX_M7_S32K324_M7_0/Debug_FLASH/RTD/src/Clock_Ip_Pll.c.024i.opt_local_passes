Clock_Ip_EnablePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize (const struct Clock_Ip_PllConfigType * Config)
{
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  short unsigned int _3;
  struct PLL_Type * _4;
  long unsigned int _5;
  struct PLL_Type * _6;
  long unsigned int _7;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Config_10(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_11 = (uint32) _2;
  # DEBUG Instance => Instance_11
  # DEBUG BEGIN_STMT
  _3 = Config_10(D)->Enable;
  if (_3 == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_pxPll[Instance_11];
  _5 ={v} _4->PLLCR;
  _6 = Clock_Ip_pxPll[Instance_11];
  _7 = _5 & 2147483647;
  _6->PLLCR ={v} _7;

  <bb 4> :
  return;

}


Clock_Ip_CompletePllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize (Clock_Ip_NameType PllName)
{
  uint32 Instance;
  uint32 PllLockStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  Clock_Ip_PllStatusReturnType PllStatus;
  unsigned char _1;
  struct PLL_Type * _2;
  long unsigned int _3;
  signed int _4;
  struct PLL_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int TimeoutTicks.0_8;
  _Bool _9;
  Clock_Ip_PllStatusReturnType _24;

  <bb 2> :
  # DEBUG BEGIN_STMT
  PllStatus_13 = 2;
  # DEBUG PllStatus => PllStatus_13
  # DEBUG BEGIN_STMT
  TimeoutOccurred_14 = 0;
  # DEBUG TimeoutOccurred => TimeoutOccurred_14
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_au8ClockFeatures[PllName_16(D)][0];
  Instance_17 = (uint32) _1;
  # DEBUG Instance => Instance_17
  # DEBUG BEGIN_STMT
  _2 = Clock_Ip_pxPll[Instance_17];
  _3 ={v} _2->PLLCR;
  _4 = (signed int) _3;
  if (_4 >= 0)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _5 = Clock_Ip_pxPll[Instance_17];
  _6 ={v} _5->PLLSR;
  _7 = _6 >> 2;
  PllLockStatus_20 = _7 & 1;
  # DEBUG PllLockStatus => PllLockStatus_20
  # DEBUG BEGIN_STMT
  TimeoutTicks.0_8 = TimeoutTicks;
  TimeoutOccurred_22 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_8);
  # DEBUG TimeoutOccurred => TimeoutOccurred_22
  # DEBUG BEGIN_STMT
  if (PllLockStatus_20 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _9 = ~TimeoutOccurred_22;
  if (_9 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_22 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  PllStatus_23 = 1;
  # DEBUG PllStatus => PllStatus_23
  goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG BEGIN_STMT
  PllStatus_18 = 0;
  # DEBUG PllStatus => PllStatus_18

  <bb 9> :
  # PllStatus_10 = PHI <PllStatus_23(7), PllStatus_18(8), PllStatus_13(6)>
  # DEBUG PllStatus => PllStatus_10
  # DEBUG BEGIN_STMT
  _24 = PllStatus_10;
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return _24;

}


Clock_Ip_SetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize (const struct Clock_Ip_PllConfigType * Config)
{
  uint32 Value;
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  short unsigned int _3;
  struct PLL_Type * _4;
  unsigned char _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  long unsigned int _10;
  long unsigned int _11;
  struct PLL_Type * _12;
  struct PLL_Type * _13;
  short unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  unsigned char _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  struct PLL_Type * _21;
  unsigned char _22;
  unsigned char _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  short unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  short unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  struct PLL_Type * _36;
  struct PLL_Type * _37;
  long unsigned int _38;
  struct PLL_Type * _39;
  long unsigned int _40;
  long unsigned int iftmp.1_41;
  long unsigned int iftmp.1_55;
  long unsigned int iftmp.1_56;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Config_44(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_45 = (uint32) _2;
  # DEBUG Instance => Instance_45
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _3 = Config_44(D)->Enable;
  if (_3 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_pxPll[Instance_45];
  Value_46 ={v} _4->PLLDV;
  # DEBUG Value => Value_46
  # DEBUG BEGIN_STMT
  Value_47 = Value_46 & 4294938368;
  # DEBUG Value => Value_47
  # DEBUG BEGIN_STMT
  _5 = Config_44(D)->Predivider;
  _6 = (long unsigned int) _5;
  _7 = _6 << 12;
  _8 = _7 & 28672;
  _9 = Config_44(D)->MulFactorDiv;
  _10 = (long unsigned int) _9;
  _11 = _8 | _10;
  Value_48 = Value_47 | _11;
  # DEBUG Value => Value_48
  # DEBUG BEGIN_STMT
  _12 = Clock_Ip_pxPll[Instance_45];
  _12->PLLDV ={v} Value_48;
  # DEBUG BEGIN_STMT
  _13 = Clock_Ip_pxPll[Instance_45];
  Value_50 ={v} _13->PLLFD;
  # DEBUG Value => Value_50
  # DEBUG BEGIN_STMT
  Value_51 = Value_50 & 3221192704;
  # DEBUG Value => Value_51
  # DEBUG BEGIN_STMT
  _14 = Config_44(D)->NumeratorFracLoopDiv;
  _15 = (long unsigned int) _14;
  _16 = _15 & 32767;
  Value_52 = Value_51 | _16;
  # DEBUG Value => Value_52
  # DEBUG BEGIN_STMT
  _17 = Config_44(D)->SigmaDelta;
  _18 = (long unsigned int) _17;
  _19 = _18 << 30;
  _20 = _19 & 1073741824;
  Value_53 = Value_52 | _20;
  # DEBUG Value => Value_53
  # DEBUG BEGIN_STMT
  _21 = Clock_Ip_pxPll[Instance_45];
  _21->PLLFD ={v} Value_53;
  # DEBUG BEGIN_STMT
  _22 = Config_44(D)->ModulationFrequency;
  if (_22 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  iftmp.1_56 = 1073741824;
  goto <bb 6>; [INV]

  <bb 5> :
  iftmp.1_55 = 0;

  <bb 6> :
  # iftmp.1_41 = PHI <iftmp.1_56(4), iftmp.1_55(5)>
  _23 = Config_44(D)->ModulationType;
  _24 = (long unsigned int) _23;
  _25 = _24 << 29;
  _26 = _25 & 536870912;
  _27 = iftmp.1_41 | _26;
  _28 = Config_44(D)->IncrementStep;
  _29 = (long unsigned int) _28;
  _30 = _29 & 2047;
  _31 = _27 | _30;
  _32 = Config_44(D)->ModulationPeriod;
  _33 = (long unsigned int) _32;
  _34 = _33 << 16;
  _35 = _34 & 67043328;
  Value_57 = _31 | _35;
  # DEBUG Value => Value_57
  # DEBUG BEGIN_STMT
  _36 = Clock_Ip_pxPll[Instance_45];
  _36->PLLFM ={v} Value_57;
  # DEBUG BEGIN_STMT
  _37 = Clock_Ip_pxPll[Instance_45];
  _38 ={v} _37->PLLCR;
  _39 = Clock_Ip_pxPll[Instance_45];
  _40 = _38 & 2147483647;
  _39->PLLCR ={v} _40;

  <bb 7> :
  return;

}


Clock_Ip_ResetPllRdivMfiMfnOdiv2SdmenSsscgbypSpreadctlStepnoStepsize (const struct Clock_Ip_PllConfigType * Config)
{
  uint32 Instance;
  <unnamed type> _1;
  unsigned char _2;
  struct PLL_Type * _3;
  long unsigned int _4;
  struct PLL_Type * _5;
  long unsigned int _6;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = Config_8(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][0];
  Instance_9 = (uint32) _2;
  # DEBUG Instance => Instance_9
  # DEBUG BEGIN_STMT
  _3 = Clock_Ip_pxPll[Instance_9];
  _4 ={v} _3->PLLCR;
  _5 = Clock_Ip_pxPll[Instance_9];
  _6 = _4 | 2147483648;
  _5->PLLCR ={v} _6;
  return;

}


Clock_Ip_CallbackPllEmptyDisable (Clock_Ip_NameType PllName)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  return;

}


Clock_Ip_CallbackPllEmptyComplete (Clock_Ip_NameType PllName)
{
  Clock_Ip_PllStatusReturnType _1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = 0;
  return _1;

}


Clock_Ip_CallbackPllEmpty (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  return;

}


