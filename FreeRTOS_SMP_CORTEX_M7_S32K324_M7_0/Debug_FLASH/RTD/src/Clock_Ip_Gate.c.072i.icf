Dump after hash based groups
Congruence classes: 5 with total: 5 items (in a non-singular class: 0)
Class size histogram [number of members]: number of classes
     1:      5
Dump after WPA based types groups
Congruence classes: 5 with total: 5 items (in a non-singular class: 0)
Class size histogram [number of members]: number of classes
     1:      5
Worklist has been filled with: 4
Address reference subdivision created: 0 new classes.
Dump after callgraph-based congruence reduction
Congruence classes: 5 with total: 5 items (in a non-singular class: 0)
Class size histogram [number of members]: number of classes
     1:      5
Init called for 0 items (0.00%).
Dump after full equality comparison of groups
Congruence classes: 5 with total: 5 items (in a non-singular class: 0)
Class size histogram [number of members]: number of classes
     1:      5
Worklist has been filled with: 4
Address reference subdivision created: 0 new classes.
Congruence classes: 5 with total: 5 items (in a non-singular class: 0)
Class size histogram [number of members]: number of classes
     1:      5

Item count: 5
Congruent classes before: 5, after: 5
Average class size before: 1.00, after: 1.00
Average non-singular class size: 0.00, count: 0
Equal symbols: 0
Totally needed symbols: 0, fraction of loaded symbols: 0.00%

Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest (Clock_Ip_NameType ClockName, boolean Gate)
{
  struct Clock_Ip_GateConfigType Config;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Config.Name = ClockName_3(D);
  # DEBUG BEGIN_STMT
  if (Gate_5(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Config.Enable = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Config.Enable = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest (&Config);
  Config ={v} {CLOBBER};
  return;

}


Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest (const struct Clock_Ip_GateConfigType * Config)
{
  uint32 EnableRequest;
  uint32 Collection;
  uint32 Partition;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  <unnamed type> _1;
  unsigned char _2;
  int _3;
  unsigned char _4;
  unsigned char _5;
  short unsigned int _6;
  const volatile struct Clock_Ip_McmePartitionGetType * _7;
  long unsigned int _8;
  long unsigned int _9;
  volatile struct Clock_Ip_McmePartitionSetType * _10;
  long unsigned int _11;
  long unsigned int _12;
  volatile struct Clock_Ip_McmePartitionTriggerType * _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int TimeoutTicks.0_18;
  long unsigned int _19;
  long unsigned int _20;
  <unnamed type> _21;
  const volatile struct Clock_Ip_McmePartitionGetType * _22;
  long unsigned int _23;
  long unsigned int _24;
  volatile struct Clock_Ip_McmePartitionSetType * _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _29;
  volatile struct Clock_Ip_McmePartitionTriggerType * _30;
  long unsigned int _31;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int TimeoutTicks.1_36;
  long unsigned int _37;
  long unsigned int _38;
  <unnamed type> _39;

  <bb 2> [local count: 696142611]:
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Config_44(D)->Name;
  _2 = Clock_Ip_au8ClockFeatures[_1][6];
  _3 = (int) _2;
  # DEBUG D#1 => &Clock_Ip_axGateInfo[_3]
  # DEBUG GateInformation => D#1
  # DEBUG BEGIN_STMT
  _4 = MEM <const struct Clock_Ip_GateInfoType[105]> [(const struct Clock_Ip_GateInfoType *)&Clock_Ip_axGateInfo][_3].PartitionValue;
  Partition_45 = (uint32) _4;
  # DEBUG Partition => Partition_45
  # DEBUG BEGIN_STMT
  _5 = MEM <const struct Clock_Ip_GateInfoType[105]> [(const struct Clock_Ip_GateInfoType *)&Clock_Ip_axGateInfo][_3].ColectionValue;
  Collection_46 = (uint32) _5;
  # DEBUG Collection => Collection_46
  # DEBUG BEGIN_STMT
  EnableRequest_47 = MEM <const struct Clock_Ip_GateInfoType[105]> [(const struct Clock_Ip_GateInfoType *)&Clock_Ip_axGateInfo][_3].RequestValueMask;
  # DEBUG EnableRequest => EnableRequest_47
  # DEBUG BEGIN_STMT
  _6 = Config_44(D)->Enable;
  if (_6 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 3> [local count: 348071305]:
  # DEBUG BEGIN_STMT
  _7 = Clock_Ip_apxMcMeGetPartitions[Partition_45];
  _8 ={v} _7->PRTN_COFB_STAT[Collection_46];
  _9 = _8 & EnableRequest_47;
  if (_9 == 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 4> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  _10 = Clock_Ip_apxMcMeSetPartitions[Partition_45];
  _11 ={v} _10->PRTN_COFB_CLKEN[Collection_46];
  _12 = _11 | EnableRequest_47;
  _10->PRTN_COFB_CLKEN[Collection_46] ={v} _12;
  # DEBUG BEGIN_STMT
  _13 = Clock_Ip_apxMcMeTriggerPartitions[Partition_45];
  _14 ={v} _13->PRTN_PCONF;
  _15 = _14 | 1;
  _13->PRTN_PCONF ={v} _15;
  # DEBUG BEGIN_STMT
  _16 ={v} _13->PRTN_PUPD;
  _17 = _16 | 1;
  _13->PRTN_PUPD ={v} _17;
  # DEBUG BEGIN_STMT
  Clock_Ip_McMeEnterKey ();
  # DEBUG BEGIN_STMT
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.0_18 = TimeoutTicks;
  TimeoutOccurred_62 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_18);
  # DEBUG TimeoutOccurred => TimeoutOccurred_62
  # DEBUG BEGIN_STMT
  _19 ={v} _7->PRTN_COFB_STAT[Collection_46];
  _20 = _19 & EnableRequest_47;
  if (_20 == 0)
    goto <bb 6>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 6> [local count: 1014686026]:
  if (TimeoutOccurred_62 != 0)
    goto <bb 7>; [5.50%]
  else
    goto <bb 16>; [94.50%]

  <bb 16> [local count: 958878294]:
  goto <bb 5>; [100.00%]

  <bb 7> [local count: 114863531]:
  # TimeoutOccurred_32 = PHI <TimeoutOccurred_62(5), TimeoutOccurred_62(6)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_32 != 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 8> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  _21 = Config_44(D)->Name;
  Clock_Ip_ReportClockErrors (1, _21);
  goto <bb 15>; [100.00%]

  <bb 9> [local count: 348071305]:
  # DEBUG BEGIN_STMT
  _22 = Clock_Ip_apxMcMeGetPartitions[Partition_45];
  _23 ={v} _22->PRTN_COFB_STAT[Collection_46];
  _24 = _23 & EnableRequest_47;
  if (_24 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 10> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  _25 = Clock_Ip_apxMcMeSetPartitions[Partition_45];
  _26 ={v} _25->PRTN_COFB_CLKEN[Collection_46];
  _27 = ~EnableRequest_47;
  _29 = _26 & _27;
  _25->PRTN_COFB_CLKEN[Collection_46] ={v} _29;
  # DEBUG BEGIN_STMT
  _30 = Clock_Ip_apxMcMeTriggerPartitions[Partition_45];
  _31 ={v} _30->PRTN_PCONF;
  _33 = _31 | 1;
  _30->PRTN_PCONF ={v} _33;
  # DEBUG BEGIN_STMT
  _34 ={v} _30->PRTN_PUPD;
  _35 = _34 | 1;
  _30->PRTN_PUPD ={v} _35;
  # DEBUG BEGIN_STMT
  Clock_Ip_McMeEnterKey ();
  # DEBUG BEGIN_STMT
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 11> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.1_36 = TimeoutTicks;
  TimeoutOccurred_54 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.1_36);
  # DEBUG TimeoutOccurred => TimeoutOccurred_54
  # DEBUG BEGIN_STMT
  _37 ={v} _22->PRTN_COFB_STAT[Collection_46];
  _38 = _37 & EnableRequest_47;
  if (_38 != 0)
    goto <bb 12>; [94.50%]
  else
    goto <bb 13>; [5.50%]

  <bb 12> [local count: 1014686026]:
  if (TimeoutOccurred_54 != 0)
    goto <bb 13>; [5.50%]
  else
    goto <bb 17>; [94.50%]

  <bb 17> [local count: 958878294]:
  goto <bb 11>; [100.00%]

  <bb 13> [local count: 114863531]:
  # TimeoutOccurred_28 = PHI <TimeoutOccurred_54(11), TimeoutOccurred_54(12)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_28 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  _39 = Config_44(D)->Name;
  Clock_Ip_ReportClockErrors (1, _39);

  <bb 15> [local count: 696142614]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Clock_Ip_ClockUpdateGateEmpty (Clock_Ip_NameType ClockName, boolean Gate)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Clock_Ip_ClockSetGateEmpty (const struct Clock_Ip_GateConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


