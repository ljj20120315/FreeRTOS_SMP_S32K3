
Marking local functions: Sema42_Ip_ResetAllGates/2


Marking externally visible functions: Sema42_Ip_GetResetGateIndex/18 Sema42_Ip_GetResetGateBusMaster/17 Sema42_Ip_IsResetGateStateIdle/16 Sema42_Ip_GetGateLocker/15 Sema42_Ip_ResetGate/14 Sema42_Ip_UnlockGate/13 Sema42_Ip_LockGate/12 Sema42_Ip_Init/11 Sema42_Ip_GetResetGateIndex_Privileged/10 Sema42_Ip_GetResetGateBusMaster_Privileged/9 Sema42_Ip_IsResetGateStateIdle_Privileged/8 Sema42_Ip_GetGateLocker_Privileged/7 Sema42_Ip_ResetGate_Privileged/6 Sema42_Ip_UnlockGate_Privileged/5 Sema42_Ip_LockGate_Privileged/4 Sema42_Ip_Init_Privileged/3


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Sema42_Ip_GetResetGateIndex/18 (Sema42_Ip_GetResetGateIndex) @061bc2a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Sema42_Ip_GetResetGateIndex_Privileged/10 
Sema42_Ip_GetResetGateBusMaster/17 (Sema42_Ip_GetResetGateBusMaster) @061bcee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Sema42_Ip_GetResetGateBusMaster_Privileged/9 
Sema42_Ip_IsResetGateStateIdle/16 (Sema42_Ip_IsResetGateStateIdle) @061bcc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Sema42_Ip_IsResetGateStateIdle_Privileged/8 
Sema42_Ip_GetGateLocker/15 (Sema42_Ip_GetGateLocker) @061bc9a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Sema42_Ip_GetGateLocker_Privileged/7 
Sema42_Ip_ResetGate/14 (Sema42_Ip_ResetGate) @061bc700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Sema42_Ip_ResetGate_Privileged/6 
Sema42_Ip_UnlockGate/13 (Sema42_Ip_UnlockGate) @061bc460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Sema42_Ip_UnlockGate_Privileged/5 
Sema42_Ip_LockGate/12 (Sema42_Ip_LockGate) @061bc1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Sema42_Ip_LockGate_Privileged/4 
Sema42_Ip_Init/11 (Sema42_Ip_Init) @061b5d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Sema42_Ip_Init_Privileged/3 
Sema42_Ip_GetResetGateIndex_Privileged/10 (Sema42_Ip_GetResetGateIndex_Privileged) @061b57e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Sema42_Ip_GetResetGateIndex/18 
  Calls: 
Sema42_Ip_GetResetGateBusMaster_Privileged/9 (Sema42_Ip_GetResetGateBusMaster_Privileged) @061b5ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Sema42_Ip_GetResetGateBusMaster/17 
  Calls: 
Sema42_Ip_IsResetGateStateIdle_Privileged/8 (Sema42_Ip_IsResetGateStateIdle_Privileged) @061b5c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Sema42_Ip_IsResetGateStateIdle/16 
  Calls: 
Sema42_Ip_GetGateLocker_Privileged/7 (Sema42_Ip_GetGateLocker_Privileged) @061b59a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Sema42_Ip_GetGateLocker/15 
  Calls: 
Sema42_Ip_ResetGate_Privileged/6 (Sema42_Ip_ResetGate_Privileged) @061b5700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Sema42_Ip_ResetGate/14 
  Calls: 
Sema42_Ip_UnlockGate_Privileged/5 (Sema42_Ip_UnlockGate_Privileged) @061b50e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Sema42_Ip_UnlockGate/13 
  Calls: 
Sema42_Ip_LockGate_Privileged/4 (Sema42_Ip_LockGate_Privileged) @06092c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Sema42_Ip_LockGate/12 
  Calls: 
Sema42_Ip_Init_Privileged/3 (Sema42_Ip_Init_Privileged) @06092e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Sema42_Ip_Init/11 
  Calls: Sema42_Ip_ResetAllGates/2 
Sema42_Ip_ResetAllGates/2 (Sema42_Ip_ResetAllGates) @06092b60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Sema42_Ip_Init_Privileged/3 
  Calls: 
Sema42_Ip_GetResetGateIndex (const uint32 u32Instance)
{
  uint8 D.5901;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.5901 = Sema42_Ip_GetResetGateIndex_Privileged (u32Instance);
  return D.5901;

}


Sema42_Ip_GetResetGateBusMaster (const uint32 u32Instance)
{
  uint8 D.5899;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.5899 = Sema42_Ip_GetResetGateBusMaster_Privileged (u32Instance);
  return D.5899;

}


Sema42_Ip_IsResetGateStateIdle (const uint32 u32Instance)
{
  boolean result;
  uint32 gateStatus;
  boolean D.5897;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Sema42_Ip_IsResetGateStateIdle_Privileged (u32Instance);
  gateStatus = (uint32) _1;
  # DEBUG BEGIN_STMT
  if (gateStatus != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  result = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  result = 1;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.5897 = result;
  return D.5897;

}


Sema42_Ip_GetGateLocker (const uint32 u32Instance, const uint8 u8GateIndex)
{
  uint8 D.5892;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.5892 = Sema42_Ip_GetGateLocker_Privileged (u32Instance, u8GateIndex);
  return D.5892;

}


Sema42_Ip_ResetGate (const uint32 u32Instance, const uint8 u8GateIndex)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Sema42_Ip_ResetGate_Privileged (u32Instance, u8GateIndex);
  return;

}


Sema42_Ip_UnlockGate (const uint32 u32Instance, const uint8 u8GateIndex)
{
  Sema42_Ip_StatusType stat;
  uint32 gateStatus;
  Sema42_Ip_StatusType D.5890;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Sema42_Ip_UnlockGate_Privileged (u32Instance, u8GateIndex);
  gateStatus = (uint32) _1;
  # DEBUG BEGIN_STMT
  if (gateStatus != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  stat = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  stat = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.5890 = stat;
  return D.5890;

}


Sema42_Ip_LockGate (const uint32 u32Instance, const uint8 u8GateIndex, uint8 u8DomainId)
{
  uint32 gateStatus;
  Sema42_Ip_StatusType stat;
  Sema42_Ip_StatusType D.5885;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Sema42_Ip_LockGate_Privileged (u32Instance, u8GateIndex, u8DomainId);
  gateStatus = (uint32) _1;
  # DEBUG BEGIN_STMT
  if (gateStatus != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = (long unsigned int) u8DomainId;
  _3 = _2 + 1;
  if (gateStatus != _3)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  if (gateStatus == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  stat = 1;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  stat = 0;

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.5885 = stat;
  return D.5885;

}


Sema42_Ip_Init (const uint32 u32Instance)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Sema42_Ip_Init_Privileged (u32Instance);
  return;

}


Sema42_Ip_GetResetGateIndex_Privileged (const uint32 u32Instance)
{
  uint8 ResetGate;
  const struct SEMA42_Type * base;
  uint8 D.5878;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base = 1078329344B;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = base->RSTGT.R;
  ResetGate = (uint8) _1;
  # DEBUG BEGIN_STMT
  if (ResetGate > 63)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  ResetGate = 64;
  goto <bb 6>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (ResetGate > 15)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  ResetGate = 255;

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.5878 = ResetGate;
  return D.5878;

}


Sema42_Ip_GetResetGateBusMaster_Privileged (const uint32 u32Instance)
{
  uint8 DomainNumber;
  const struct SEMA42_Type * base;
  uint8 D.5870;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base = 1078329344B;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = base->RSTGT.R;
  _2 = (unsigned int) _1;
  _3 = _2 >> 8;
  _4 = (unsigned char) _3;
  DomainNumber = _4 & 15;
  # DEBUG BEGIN_STMT
  if (DomainNumber <= 2)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  DomainNumber = 255;

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.5870 = DomainNumber;
  return D.5870;

}


Sema42_Ip_IsResetGateStateIdle_Privileged (const uint32 u32Instance)
{
  const struct SEMA42_Type * base;
  uint8 gateStatus;
  uint8 D.5865;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base = 1078329344B;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = base->RSTGT.R;
  _2 = (unsigned int) _1;
  _3 = _2 >> 12;
  _4 = (unsigned char) _3;
  gateStatus = _4 & 3;
  # DEBUG BEGIN_STMT
  D.5865 = gateStatus;
  return D.5865;

}


Sema42_Ip_GetGateLocker_Privileged (const uint32 u32Instance, const uint8 u8GateIndex)
{
  uint8 DomainLocker;
  const struct SEMA42_Type * base;
  uint8 D.5863;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base = 1078329344B;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = u8GateIndex ^ 3;
  _2 = (int) _1;
  _3 = base->GATE[_2];
  DomainLocker = _3 & 15;
  # DEBUG BEGIN_STMT
  if (DomainLocker > 3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  DomainLocker = 255;
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (DomainLocker != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DomainLocker = DomainLocker + 255;
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  DomainLocker = 255;

  <bb 7> :
  # DEBUG BEGIN_STMT
  D.5863 = DomainLocker;
  return D.5863;

}


Sema42_Ip_ResetGate_Privileged (const uint32 u32Instance, const uint8 u8GateIndex)
{
  struct SEMA42_Type * base;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base = 1078329344B;
  # DEBUG BEGIN_STMT
  _1 = (short unsigned int) u8GateIndex;
  _2 = _1 | 57856;
  base->RSTGT.W = _2;
  # DEBUG BEGIN_STMT
  _3 = (short unsigned int) u8GateIndex;
  _4 = _3 | 7424;
  base->RSTGT.W = _4;
  return;

}


Sema42_Ip_UnlockGate_Privileged (const uint32 u32Instance, const uint8 u8GateIndex)
{
  uint8 gateStatus;
  struct SEMA42_Type * base;
  uint8 D.5855;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base = 1078329344B;
  # DEBUG BEGIN_STMT
  _1 = u8GateIndex ^ 3;
  _2 = (int) _1;
  base->GATE[_2] = 0;
  # DEBUG BEGIN_STMT
  _3 = u8GateIndex ^ 3;
  _4 = (int) _3;
  _5 = base->GATE[_4];
  gateStatus = _5 & 15;
  # DEBUG BEGIN_STMT
  D.5855 = gateStatus;
  return D.5855;

}


Sema42_Ip_LockGate_Privileged (const uint32 u32Instance, const uint8 u8GateIndex, uint8 u8DomainId)
{
  uint8 gateStatus;
  struct SEMA42_Type * base;
  uint8 D.5853;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base = 1078329344B;
  # DEBUG BEGIN_STMT
  _1 = u8GateIndex ^ 3;
  _2 = (int) _1;
  _3 = base->GATE[_2];
  gateStatus = _3 & 15;
  # DEBUG BEGIN_STMT
  if (gateStatus == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _4 = u8DomainId + 1;
  _5 = u8GateIndex ^ 3;
  _6 = (int) _5;
  _7 = _4 & 15;
  base->GATE[_6] = _7;
  # DEBUG BEGIN_STMT
  _8 = u8GateIndex ^ 3;
  _9 = (int) _8;
  _10 = base->GATE[_9];
  gateStatus = _10 & 15;

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.5853 = gateStatus;
  return D.5853;

}


Sema42_Ip_Init_Privileged (const uint32 u32Instance)
{
  struct SEMA42_Type * base;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  base = 1078329344B;
  # DEBUG BEGIN_STMT
  Sema42_Ip_ResetAllGates (base);
  return;

}


__attribute__((always_inline))
Sema42_Ip_ResetAllGates (struct SEMA42_Type * const base)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  base->RSTGT.W = 57856;
  # DEBUG BEGIN_STMT
  base->RSTGT.W = 7488;
  return;

}


