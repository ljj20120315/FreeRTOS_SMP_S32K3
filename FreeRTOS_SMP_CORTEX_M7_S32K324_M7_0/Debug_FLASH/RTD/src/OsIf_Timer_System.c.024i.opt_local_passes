OsIf_Timer_System_MicrosToTicks (uint32 Micros)
{
  uint32 CoreId;
  uint32 ticks;
  uint64 interim;
  _Bool _1;
  _Bool _2;
  const struct OsIf_ConfigType * _3;
  long long unsigned int _4;
  long unsigned int _5;
  long long unsigned int _6;
  _Bool _7;
  uint32 _20;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ticks_10 = 0;
  # DEBUG ticks => ticks_10
  # DEBUG BEGIN_STMT
  CoreId_11 = 0;
  # DEBUG CoreId => CoreId_11
  # DEBUG BEGIN_STMT
  _1 = OsIf_abMdlInit[CoreId_11];
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  DevAssert (0);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = OsIf_apxInternalCfg[CoreId_11];
  if (_3 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DevAssert (0);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _4 = (long long unsigned int) Micros_13(D);
  _5 = OsIf_au32InternalFrequencies[CoreId_11];
  _6 = (long long unsigned int) _5;
  interim_14 = _4 * _6;
  # DEBUG interim => interim_14
  # DEBUG BEGIN_STMT
  interim_15 = interim_14 / 1000000;
  # DEBUG interim => interim_15
  # DEBUG BEGIN_STMT
  _7 = interim_15 <= 4294967295;
  DevAssert (_7);
  # DEBUG BEGIN_STMT
  ticks_17 = (uint32) interim_15;
  # DEBUG ticks => ticks_17

  <bb 7> :
  # ticks_8 = PHI <ticks_10(3), ticks_10(5), ticks_17(6)>
  # DEBUG ticks => ticks_8
  # DEBUG BEGIN_STMT
  _20 = ticks_8;
  return _20;

}


OsIf_Timer_System_SetTimerFrequency (uint32 Freq)
{
  uint32 CoreId;
  _Bool _1;
  _Bool _2;
  const struct OsIf_ConfigType * _3;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CoreId_5 = 0;
  # DEBUG CoreId => CoreId_5
  # DEBUG BEGIN_STMT
  _1 = OsIf_abMdlInit[CoreId_5];
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  DevAssert (0);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = OsIf_apxInternalCfg[CoreId_5];
  if (_3 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DevAssert (0);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  OsIf_au32InternalFrequencies[CoreId_5] = Freq_7(D);

  <bb 7> :
  return;

}


OsIf_Timer_System_GetElapsed (uint32 * const CurrentRef)
{
  uint32 CoreId;
  uint32 Elapsed;
  _Bool _1;
  _Bool _2;
  const struct OsIf_ConfigType * _3;
  uint32 _14;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Elapsed_6 = 0;
  # DEBUG Elapsed => Elapsed_6
  # DEBUG BEGIN_STMT
  CoreId_7 = 0;
  # DEBUG CoreId => CoreId_7
  # DEBUG BEGIN_STMT
  _1 = OsIf_abMdlInit[CoreId_7];
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  DevAssert (0);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = OsIf_apxInternalCfg[CoreId_7];
  if (_3 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DevAssert (0);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Elapsed_11 = OsIf_Timer_System_Internal_GetElapsed (CurrentRef_9(D));
  # DEBUG Elapsed => Elapsed_11

  <bb 7> :
  # Elapsed_4 = PHI <Elapsed_6(3), Elapsed_6(5), Elapsed_11(6)>
  # DEBUG Elapsed => Elapsed_4
  # DEBUG BEGIN_STMT
  _14 = Elapsed_4;
  return _14;

}


OsIf_Timer_System_GetCounter ()
{
  uint32 CoreId;
  uint32 Counter;
  _Bool _1;
  _Bool _2;
  const struct OsIf_ConfigType * _3;
  uint32 _13;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Counter_6 = 0;
  # DEBUG Counter => Counter_6
  # DEBUG BEGIN_STMT
  CoreId_7 = 0;
  # DEBUG CoreId => CoreId_7
  # DEBUG BEGIN_STMT
  _1 = OsIf_abMdlInit[CoreId_7];
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  DevAssert (0);
  goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _3 = OsIf_apxInternalCfg[CoreId_7];
  if (_3 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  DevAssert (0);
  goto <bb 7>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Counter_10 = OsIf_Timer_System_Internal_GetCounter ();
  # DEBUG Counter => Counter_10

  <bb 7> :
  # Counter_4 = PHI <Counter_6(3), Counter_6(5), Counter_10(6)>
  # DEBUG Counter => Counter_4
  # DEBUG BEGIN_STMT
  _13 = Counter_4;
  return _13;

}


OsIf_Timer_System_Init ()
{
  uint32 CoreId;
  const struct OsIf_ConfigType * _1;
  const struct OsIf_ConfigType * _2;
  const struct OsIf_ConfigType * _3;
  long unsigned int _4;

  <bb 2> :
  # DEBUG BEGIN_STMT
  CoreId_6 = 0;
  # DEBUG CoreId => CoreId_6
  # DEBUG BEGIN_STMT
  _1 = OsIf_apxPredefinedConfig[CoreId_6];
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  DevAssert (0);

  <bb 4> :
  # DEBUG BEGIN_STMT
  OsIf_abMdlInit[CoreId_6] = 1;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _2 = OsIf_apxPredefinedConfig[CoreId_6];
  OsIf_apxInternalCfg[CoreId_6] = _2;
  # DEBUG BEGIN_STMT
  _3 = OsIf_apxInternalCfg[CoreId_6];
  _4 = _3->counterFrequency;
  OsIf_au32InternalFrequencies[CoreId_6] = _4;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  OsIf_Timer_System_Internal_Init ();
  return;

}


DevAssert (volatile boolean x)
{
  _Bool x.0_1;

  <bb 2> :
  # DEBUG BEGIN_STMT
  x.0_1 ={v} x;
  if (x.0_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  goto <bb 3>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


